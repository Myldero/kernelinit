# Generated by kernelinit
CC = musl-gcc
CFLAGS = -Wall -Wextra -Wno-unused-function -O0 -static -ggdb -masm=intel -no-pie
RELEASE_CFLAGS = $(CFLAGS) -s

SOURCES = $(wildcard exploit-src/*.c)
OBJECTS = $(SOURCES:.c=.o)
LIBS = -lpthread

kernelinit/kernelsymbols.o: kernelinit/kernelconfig.h
	gcc -c -g -I./kernelinit "TEMPLATES_DIR/kernelsymbols.c" -o $@

debug: kernelinit/kernelsymbols.o
	gdb -x kernelinit/debug.gdb

run: cpio
	./kernelinit/my-run.sh

cpio: exploit
	cp CPIOFILE kernelinit/my-rootfs.cpio
	chmod u+s kernelinit/makeroot
	printf 'exploit\nmakeroot\n' | cpio -D "$(PWD)"/kernelinit -A -F kernelinit/my-rootfs.cpio -o -H newc --owner=+0.+0
	chmod u-s kernelinit/makeroot
	#sed -i 's/cttyhack setuidgid 1000/cttyhack setuidgid    0/g' kernelinit/my-rootfs.cpio
	#gzip -f kernelinit/my-rootfs.cpio

kernelinit/exploit: $(OBJECTS)
	$(CC) $(CFLAGS) $^ $(LIBS) -o $@

exploit: kernelinit/exploit

release: $(OBJECTS)
	$(CC) $(RELEASE_CFLAGS) $^ $(LIBS) -o exploit
	gzip -9 exploit

clean:
	rm -f kernelinit/exploit kernelinit/my-rootfs.cpio kernelinit/my-rootfs.cpio.gz kernelinit/kernelsymbols.o $(OBJECTS)

.PHONY: run debug cpio exploit release clean
.DEFAULT_GOAL := run
